@model IEnumerable<ManagerSales.Web.GUI.Models.Sale>
@{
    ViewBag.Title = "Home Page";
}
@using GridMvc.Html
@using ManagerSales.Web.GUI.Models

<div class="btn-group">
    <button type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-plus"></span> Добавить
    </button>
    <button id="refresh" type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-refresh"></span> Обновить
    </button>
</div>

<h1>Продажи</h1>
<div id="table">
    @helper CustomRenderingOfColumn(Sale order)
    {
        <div class="btn-group">
            <a class="btn btn-default" href="ManagerSales/Edit?id=@order.Id">Редактировать</a>
            <a class="btn btn-default" href="ManagerSales/Remove?id=@order.Id">Удалить</a>
        </div>
    }


    @Html.Grid(Model).Named("grid").Columns(columns =>
    {
        columns.Add(c => c.Date).Titled("Date").Filterable(true);
        columns.Add(c => c.ManagerName).Titled("Manager").Filterable(true);
        columns.Add(c => c.CustomerName).Titled("Customer").Filterable(true);
        columns.Add(c => c.ProductName).Titled("Product").Filterable(true);
        columns.Add(c => c.Summ).Titled("Summ").Filterable(true);
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(o => CustomRenderingOfColumn(o));
    }).Sortable(true).WithPaging(10)
</div>
<script>
    $(document).ready(function () {
        $("#refresh").click(function () {
            $.ajax({
                url: '@Url.Action("Index","ManagerSales")',
                type: 'Get',
                success: function (response) {
                    $("#table").replaceWith(response);
                },
                async: true,
                processData: false
            });
        });
    });
    function Edit(id) {
       console.log(id);
    }
    function Remove(id) {
        console.log(id);
        $.get('@Url.Action("Edit","ManagerSales")', { id: id });
    }
</script>
